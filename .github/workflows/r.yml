name: R

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        r-version: ['4.3.3', '4.4.1']

    steps:
      - uses: actions/checkout@v4

      - name: Install macOS dependencies
        run: |
          brew install libgit2
        if: runner.os == 'macOS'

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.r-version }}-pkgs-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.r-version }}-pkgs-

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@f57f1301a053485946083d7a45022b278929a78a
        with:
          r-version: ${{ matrix.r-version }}

      - name: Print environment details
        run: |
          clang --version
          R --version
          pkg-config --libs --cflags libproc
        if: runner.os == 'macOS'

      - name: Install dependencies
        timeout-minutes: 20
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--verbose"), error_on = "error")
        shell: Rscript {0}
