% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/igfetchr.R
\name{ig_execute_trade}
\alias{ig_execute_trade}
\title{Execute a trade (place OTC position)}
\usage{
ig_execute_trade(
  epic,
  direction,
  size,
  auth,
  limit = NULL,
  stop = NULL,
  mock_response = NULL
)
}
\arguments{
\item{epic}{Character. Market epic (e.g., "CS.D.USDCHF.CFD.IP").}

\item{direction}{Character. Trade direction, either "BUY" or "SELL".}

\item{size}{Numeric. Trade size (units).}

\item{auth}{List. Authentication details from `ig_auth()`, including `cst`, `security`, `base_url`, `api_key`, and `acc_number`.}

\item{limit}{Numeric. Optional limit price for the trade.}

\item{stop}{Numeric. Optional stop price for the trade.}

\item{mock_response}{List or data frame. Optional mock response for testing, bypassing the API call.}
}
\value{
A tibble with trade confirmation details, including columns like `dealId`, `dealReference`, `status`, and others as returned by the IG API `/positions/otc` endpoint.
}
\description{
Places a market trade (BUY/SELL) for a specified market epic. For testing, use `mock_response` to avoid network calls.
}
\examples{
\dontrun{
# Authenticate and execute a trade
auth <- ig_auth(
  username = "your_username",
  password = "your_password",
  api_key = "your_api_key",
  acc_type = "DEMO",
  acc_number = "ABC123"
)
res <- ig_execute_trade("CS.D.USDCHF.CFD.IP", "BUY", 1.0, auth, limit = 0.855, stop = 0.845)
print(res)

# Using mock response for testing
mock_response <- data.frame(
  dealId = "DIXXXX",
  dealReference = "REF123",
  status = "OPEN"
)
res <- ig_execute_trade("CS.D.USDCHF.CFD.IP", "BUY", 1.0, auth, mock_response = mock_response)
}

}
